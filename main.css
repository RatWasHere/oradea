body {
  background: url('./Assets/bg.png');
}

:root {
  --s: 740px;
  --sr: 660px;
  --jo: 20px;
  --t: 750ms;
  --d: 40px;
  --dnr: -10px;
  --tlr: 75px;
  /* JUDGEMENT OFFSET */
  --nr: 110px;
  --notePreviewDelay: 1650ms;
  view-transition-name: root;
}

.line {
  width: 800px;
  height: 90px;
  border-bottom: 10px black solid;
  background: white;
}

.note {
  width: 150px;
  height: 150px;
  background: url('./quad_arc.svg');
  background-size: cover;
  margin-bottom: -150px;
  rotate: 0deg;
  /* transition: all cubic-bezier(.21,.81,.33,1.48) 0.2s; */
}

.note_child {
  width: 20px;
  margin: auto;
  background: red;
  text-align: center;
  height: 20px;
}

@keyframes move {
  0% {
    left: 0px;
  }

  100% {
    left: 800px;
  }
}

@keyframes in {
  0% {
    scale: 2;
    opacity: 0;
  }

  20% {
    opacity: 1;
  }

  100% {
    scale: 1;
    opacity: 1;
  }
}

.indicator {
  width: 10px;
  position: absolute;
  margin-left: 0px;
  height: 190px;
  animation: linear move var(--this-duration);
}

.flexbox {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
}

flexbox {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  width: 100%;
}

btext {
  transition: color 0.4s ease;
  font-size: 18px;
  color: #ffffff;
  text-align: center;
  margin-left: auto;
  margin-right: auto;
  margin-top: auto;
  margin-bottom: auto;
}

.bpmMarker {
  border-radius: 100%;
  width: 10px;
  height: 90px;
  background: #ff0000;

  margin-left: var(--bpm-margin);
  margin-right: var(--bpm-margin);
}


body {
  font-family:
    "Arial",
    Arial,
    system-ui,
    -apple-system,
    BlinkMacSystemFont,
    "Segoe UI",
    Roboto,
    Oxygen,
    Ubuntu,
    Cantarell,
    "Open Sans",
    "Helvetica Neue",
    sans-serif,
    sans-serif !important;
  overflow: hidden;
  cursor: default;
  user-select: none;
  justify-content: center;
  align-items: center;
  transition: all ease 0.5s;
  color: #ffffff90;
  font-size: 18px;
}

.animated_in {
  animation: animate_in cubic-bezier(.17, .67, .13, 1.35);
  scale: 1.5;
}

.preview_note {
  animation: preview_note linear 0.2s infinite;
  opacity: 0.5;
}

@keyframes preview_note {
  0% {
    rotate: 0deg;
  }

  25% {
    rotate: 2deg;
  }

  75% {
    rotate: -2deg;
  }

  100% {
    rotate: 0deg;
  }
}

@keyframes animate_in {
  0% {
    scale: 3;
    opacity: 0;
  }

  100% {
    scale: 1.5;
    opacity: 1;
  }
}

.arc {
  width: var(--s);
  aspect-ratio: 1;
  position: absolute;
  border-radius: 100%;
  /* animation: note_in_classic linear 2s; */
  /* margin-top: -10px; */
  transition: opacity 0.4s ease;
  /* opacity: 0.1; */
  border: solid 0px white inset;
  /* border-bottom: 22px white solid; */
  background: url(./note.svg);
  background-repeat: no-repeat;
  background-size: cover;
  rotate: var(--r);
}

.held {
  box-shadow: yellow 0px -10px 1px 0px inset;
  animation: held 500ms ease;
  opacity: 0;
  background-image: none !important;
}

.flicked_p {
  /* scale: 2 0.1; */
  transition: all 0.45s ease !important;
  /* filter: blur(12px);
  rotate: 90deg;
  opacity: 0; */
}

.flicked {
  scale: 2 0.1;
  transition: all 0.30s ease !important;
  filter: blur(12px);
  opacity: 0;
}

.flick1 {
  background: url('./Assets/Headers/Flick\ Base\ Positive.svg') !important;
  rotate: 270deg;
}

.flick2 {
  background: url('./Assets/Headers/Flick\ Base\ Negative.svg') !important;
  rotate: 90deg;
}


@keyframes held {
  0% {
    scale: 1.1;
    opacity: 0;
  }

  35% {
    opacity: 1;
    scale: 1;
  }

  60% {
    scale: 1;
  }

  100% {
    opacity: 0;
    scale: 1;
  }
}

@keyframes note_in_classic {
  0% {
    opacity: 0;
    scale: 0;
  }

  100% {
    opacity: 1;
    scale: 1;
  }
}

.done {
  opacity: 0;
  transition: all 0.2s ease !important;
  animation: none !important;
}

.lane {
  height: var(--s);
  width: var(--nr);
  margin-left: calc((var(--s) / 2) - var(--nr) / 2);
  /* margin-top: var(--s); */
  /* padding: calc(var(--nr) / 2 * -1); */
  /* background: blue !important; */
  margin-right: auto;
  position: absolute;
  border-radius: 1000px;
  opacity: 1;
  overflow: hidden;
  pointer-events: none;
}

.item:hover {
  scale: 1.2 !important;
}

.item {
  width: var(--nr);
  height: var(--nr);
  border-radius: var(--nr);
  margin-top: calc((((var(--sr) - var(--nr)) / 2) + var(--jo)));
  background: url('./Assets/Headers/Note.svg');
  background-size: cover !important;
  background-repeat: no-repeat !important;
  background-position: center !important;
  z-index: 500;
  pointer-events: auto;
  position: relative;
  /* animation: note_in_classic 100ms ease; */
}

.holdable {
  background: url('./Assets/Headers/Note\ Holdable.svg');
}



.flick1,
.flick2 {
  border-radius: 0px !important;
  background-size: cover !important;
  background-repeat: no-repeat !important;
}

/* Left arrow border */

.flick1>.flick_arrows {
  background: url('./Assets/Headers/Flick\ Positive.svg') !important;
}

.flick2>.flick_arrows {
  background: url('./Assets/Headers/Flick\ Negative.svg') !important;
}

.flick2>.flick_arrows,
.flick1>.flick_arrows {
  height: var(--nr);
  width: var(--nr);
  background-size: cover !important;
  background-repeat: repeat !important;
  animation: flick_hint calc(var(--t) / 2) ease-in-out infinite;
  transform-origin: top;
}

@keyframes flick_hint {
  0% {
    translate: 0px 10px;
    opacity: 0;
  }

  25% {
    translate: 0px 5px;
    opacity: 1;
  }

  75% {
    translate: 0px 0px;
    opacity: 1;
  }

  100% {
    translate: 0px -10px;
    opacity: 0;
  }
}

@keyframes note_in_classic {
  0% {
    opacity: 0;
    scale: 0;
  }

  100% {
    opacity: 1;
    scale: 1;
  }
}

.header {
  width: var(--nr);
  height: calc(var(--nr) / 2);
  background-size: cover !important;
  background-repeat: no-repeat !important;
}

.flick_arrows {
  width: var(--nr);
  height: var(--nr);
}

.header.end {
  background: url('./Assets/Headers/Bottom.svg');
  transform-origin: top;
}

.header.start {
  background: url('./Assets/Headers/Top.svg');
  margin-top: auto;
  transform-origin: bottom;
}

.header.midframe {
  background: url(./Assets/Headers/Frame.svg);
  height: calc(var(--sliderHeight));
  background-size: var(--nr) var(--nr) !important;
  background-repeat: repeat-y !important;
}

.header:nth-of-type(1) {
  margin-right: 0px;
}

#cursor {
  width: 24px;
  height: 24px;
  border-radius: 100%;
}

.previewer {
  --bg: rgba(0, 0, 0, 0.5);
  background: conic-gradient(var(--bg) 0deg,
      var(--bg) 60deg,
      transparent 60deg);
  rotate: calc(var(--i) * 60deg);
  width: var(--s);
  aspect-ratio: 1;
  position: absolute;
  border-radius: 100%;
  /* pointer-events: none; */
  opacity: 1;
  transition: scale 0.1s ease;
}

.previewer.selected {
  opacity: 1;
  --bg: #f5b64260;
  transform: translateY(-12px) translateX(5px);
}

.previewer_parent:nth-of-type(3)>.previewer,
.previewer_parent:nth-of-type(5)>.previewer,
.previewer_parent:nth-of-type(7)>.previewer,
.previewer_parent:nth-of-type(9)>.previewer {
  opacity: 0.8;
}


@view-transition {
  navigation: auto !important;
}


::view-transition-group(root) {
  animation-duration: 0.5s;
}


@keyframes move-out {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes move-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

/* Apply the custom animation to the old and new page states */

::view-transition-old(root) {
  animation: 0.4s ease-in both move-out;
}

::view-transition-new(root) {
  animation: 0.4s ease-in both move-in;
}

@font-face {
  font-family: 'Moderno';
  src: url('days.ttf');
}

.m {
  font-family: 'Moderno';
}


btext {
  transition: color 0.4s ease;
  font-size: 18px;
}

btextm {
  font-family: 'Moderno';
  font-size: 24px;
  color: #ffffff;
}

.big {
  font-size: 32px;
}

.small {
  font-size: 18px;
  opacity: 0.5;
}


.image {
  margin: auto;
  background-size: contain !important;
  background-repeat: no-repeat !important;
  background-clip: content-box !important;
  background-position: center !important;
  transition: all 0.3s ease;
  text-align: center;
}

btn {
  background: #FFFFFF30;
  transition: all ease .07s;
  position: initial;
  width: auto;
  padding: 5px;
  padding-left: 7px;
  padding-right: 7px;
  border-radius: 5px;
  box-shadow: inset 0 0 2px #ffffff10;
  display: block;
  backdrop-filter: blur(12px);
}

btn:hover {
  background: #FFFFFF50;
}

btn:active {
  background: #FFFFFF20;
}

.comeIn {
  animation: come-in 0.2s ease;
  backdrop-filter: blur(10px);
}

@keyframes come-in {
  from {
    opacity: 0;
    scale: 0.5;
  }

  to {
    opacity: 1;
    scale: 1;
  }
}

.noteContainer {
  width: 100%;
  height: calc(50% + var(--nr));
  overflow: hidden;
  transform: translateY(calc(var(--sr) / 2));
}



.actively_pressed_in {
  height: calc(50% - (var(--dnr))) !important;
  border-radius: 0px !important;
}

.slider {
  background: none !important;
  /* bottom: calc((var(--nr) * 0.5) + var(--d) * 0.5); */
}

.center {
  --size: calc(var(--nr));
  width: var(--size);
  aspect-ratio: 1;
  border-radius: var(--size);
  z-index: 500;
  background: #000000;
  position: absolute;
  translate: calc(var(--s) / 2 - var(--size) / 2) calc(var(--s) / 2 - var(--size) / 2);
}

#comboDisplay {
  font-size: 24px;
  color: #ffffff;
  margin: auto;
  display: block;
  align-self: center;
  justify-self: center;
  text-align: center;
}

.hitIndicator {
  --bg: #ffffff;
  background:
    conic-gradient(var(--bg) 0deg, var(--bg) 60deg, #00000000 60deg);
  width: var(--s);
  aspect-ratio: 1;
  position: absolute;
  border-radius: 100%;
  /* pointer-events: none; */
  opacity: 0.5;
  transition: scale 0.1s ease;
}

.effects_containment {
  width: 100%;
  height: 100%;
  --rotation: 90deg;
  /* Changed from 67.5 to 90 for 6 segments (360/6 = 60, plus half = 90) */
  position: absolute;
  inset: 0;
  border-radius: 100%;
  pointer-events: none;
  mask-image: conic-gradient(from var(--rotation) at 50% 50%, var(--bg) 0deg, var(--bg) 60deg, transparent 60deg);
  z-index: 1;
  background-size: var(--s);
  background-position: 600px 600px;
  rotate: calc(var(--rotation) * -1);
  transition: all 0.2s ease;
  opacity: 1;
  /* animation: glow 2s linear; */
  /* background: linear-gradient(270deg, #FFFFFF, #FFFFFF30, #FFFFFF00); */
}



.previewer:has(.effect)::after::after {
  content: "";
  border-radius: 100%;
  --rotation: 90deg;
  /* define the variable here */
  rotate: -90deg;
  filter: blur(50px);
  mask-image: conic-gradient(from var(--rotation) at 50% 50%, var(--bg) 0deg, var(--bg) 60deg, transparent 60deg);
  mask-composite: exclude;
  height: var(--s);
  display: block;
  width: var(--s);
  background: blue;
  z-index: 5000;
  position: absolute;
}

.previewer::after {
  content: "";
  transition: all 0.15s cubic-bezier(0, .93, .68, 1.03);
  --rotation: 90deg;
  mask-image: conic-gradient(from var(--rotation) at 50% 50%, var(--bg) 0deg, var(--bg) 60deg, transparent 60deg) !important;
  scale: 1.2;
  opacity: 0;
  rotate: -90deg;
  background: red;
  width: var(--s);
  height: var(--s);
  display: block;
  border-radius: 50px;
}

.previewer:has(.effect)::after {
  filter: blur(50px);
  scale: 1;
  opacity: 1;
  border-radius: var(--s);
}

.effect {
  opacity: 0.5;
  /* animation: glow 2s linear infinite; */
}

@keyframes glow {
  0% {
    opacity: 0;
    background-position: 600px 600px;
  }

  50% {
    opacity: 1;
  }

  100% {
    opacity: 0;
    background-position: 0px 0px;
  }
}

.laneParent {
  width: 100%;
  height: 100%;
  position: absolute;
}

.previewer_parent {
  position: absolute;
  scale: 1;
  width: var(--s);
  height: var(--s);
}

.frame {
  width: var(--sr);
  height: var(--sr);
  background: url(./frame.svg);
  background-size: cover;
  margin-left: calc((var(--s) - var(--sr)) / 2);
  margin-top: calc((var(--s) - var(--sr)) / 2);
  position: absolute;
}

.indicator_parent {
  width: var(--s);
  height: var(--s);
  /* margin-left: var(--d);
  margin-top: var(--d); */
  position: absolute;
}

.dist {
  /* margin-left: calc((var(--s) - var(--sr)) + var(--d) / 2);
  margin-top: calc(((var(--sr) - var(--s))) - var(--d) / 2); */
}

.indicator_parent>.header.end {
  rotate: 135deg;
  height: var(--nr);
  background-size: contain !important;
  background-repeat: no-repeat !important;

  --distance: calc(((var(--s) - var(--sr)) / 2) - (var(--d) / 2));

  translate: var(--distance) var(--distance);
}

.indicator_parent>.header.from_aura {
  rotate: 135deg;
  height: var(--nr);
  background-size: contain !important;
  background-repeat: no-repeat !important;

  --distance: calc(((var(--s) - var(--sr)) / 2));

  translate: var(--distance) var(--distance);
}

.indicator_parent:has(.header.end) {
  height: var(--sr);
  width: var(--sr);
  margin-left: calc((var(--s) - var(--sr)) / 2);
  margin-top: calc((var(--s) - var(--sr)) / 2);
}

.indicator {
  border: solid white 10px;
  margin: auto;
  transition: all 0.2s ease;
}

.aura {
  animation: aura 0.5s ease;
}

@keyframes aura {
  0% {
    scale: 1;
    border-radius: 100%;
    opacity: 0.5;
    filter: blur(0px);
    translate: 0px 0px;
  }

  100% {
    /* border-radius: 0px; */
    /* rotate: 360deg; */
    opacity: 0;
    translate: 0px calc(var(--sr) / -2);
    filter: blur(12px);
    scale: 0.5;
  }
}


.was_hit,
.was_hit2,
.actively_pressed,
.actively_pressed2 {
  width: calc(var(--nr) * 2);
  height: calc(var(--nr) * 2);
  scale: 0;
  opacity: 1;
  border: 15px solid #ffffff;
  box-shadow: 0px 0px 10px 10px #ffffff50 inset, 0px 0px 10px 10px #ffffff50;
  animation: hit 0.3s linear, rotate 0.45s ease;
  translate: var(--d) var(--d);
}

.was_hit2 {
  animation: hit 0.5s linear, rotate2 0.7s ease;
}

.aura.golden {
  animation: golden_effect 0.5s ease;
  background: gold !important;
  border-radius: 0px !important;
  width: calc(var(--nr) * 4);
}

.lane:has(.aura.golden) {
  margin-left: 0px;
  width: 100%;
  clip-path: polygon(20% 0%, 80% 0%, 100% 100%, 0% 100%);
  opacity: 0.4;
  filter: blur(12px);
  mask: conic-gradient(white 0deg, white 60deg, transparent 60deg);
  mask-repeat: no-repeat;
  mask-position: center;
  mask-size: cover;
}

.aura.golden>.header {
  display: none;
}

@keyframes golden_effect {
  0% {
    translate: 0px 0px;
    width: calc(var(--nr) * 2);
    height: calc(var(--nr) / 2);
  }

  100% {
    /* opacity: 0; */
    translate: 0px calc(var(--sr) / -2);
    height: var(--nr);
    margin-left: calc(var(--nr) / 2);
    width: var(--nr);
    margin-left: calc(var(--nr));
    width: 0;
  }
}

.actively_pressed {
  scale: 0.5;
  opacity: 0.5;
  animation: hit_in 0.3s ease, rotate2 0.7s linear infinite;
}

.actively_pressed2 {
  scale: 0.5;
  opacity: 0.5;
  animation: hit_in 0.4s ease, rotate 0.4s linear infinite;
}

@keyframes hit_in {
  0% {
    scale: 0.2;
    opacity: 0;
  }

  100% {
    scale: 0.5;
    opacity: 0.5;
  }
}

@keyframes hit {
  0% {
    scale: 0.6;
    opacity: 0;
  }

  10% {
    opacity: 0.5;
  }

  13% {
    opacity: 0.3;
  }

  16% {
    opacity: 0.5;
  }

  19% {
    opacity: 0.8;
  }

  20% {
    scale: 0.7;
  }

  23% {
    opacity: 0.3;
  }

  27% {
    opacity: 0.8;
  }

  34% {
    opacity: 0.2;
  }

  40% {
    opacity: 0.5;
  }

  46% {
    opacity: 0.1;
  }

  50% {
    opacity: 0.8;
  }

  55% {
    opacity: 0.2;
  }

  60% {
    opacity: 0.8;
  }

  66% {
    opacity: 0.1;
  }

  70% {
    opacity: 0.8;
  }

  75% {
    opacity: 0.2;
  }

  80% {
    opacity: 0.8;
  }

  100% {
    opacity: 0;
    scale: 0.3;
  }
}

@keyframes rotate {
  0% {
    rotate: 0deg;
  }

  100% {
    rotate: 90deg;
  }
}

@keyframes rotate2 {
  0% {
    rotate: 135deg;
  }

  100% {
    rotate: 60deg;
  }
}

@keyframes hold {
  0% {
    width: calc(var(--nr) * 2);
    height: calc(var(--nr) * 2);
    filter: blur(0px);
  }

  50% {
    width: calc(var(--nr) * 1.8);
    height: calc(var(--nr) * 1.8);
    filter: blur(12px);
  }

  100% {
    width: calc(var(--nr) * 2);
    height: calc(var(--nr) * 2);
    filter: blur(0px);
  }
}

::-webkit-scrollbar {
  display: none;
}

.golden {
  background: gold !important;
}

.from_aura {
  background: url('./Assets/Headers/Header.svg') !important;
}

.holdable_start {
  background: url('./Assets/Headers/Top\ Holdable.svg') !important;
  margin-top: auto;
}

.holdable_end {
  background: url('./Assets/Headers/Bottom\ Holdable.svg') !important;
}

.holdable_end,
.holdable_start {
  background-size: cover !important;
}